replicaCount: 1

# MinIO Server
image:
  registry: docker.io
  repository: bitnami/minio
  pullPolicy: IfNotPresent
  pullSecrets: []

# auth:
#   rootUser: minioadmin
#   rootPassword: minioadmin123
#   usePasswordFiles: true
#   useSecret: true
#   forcePassword: true
# kubectl create secret generic minio-credentials \
#   --from-literal=MINIO_ROOT_USER=minioadmin \
#   --from-literal=MINIO_ROOT_PASSWORD=minioadmin123 \
#   -n minio

auth:
  existingSecret: minio-credentials
  rootUserSecretKey: MINIO_ROOT_USER
  rootPasswordSecretKey: MINIO_ROOT_PASSWORD
  useSecret: true
  usePasswordFiles: true
  forcePassword: false

persistence:
  enabled: true
  storageClass: local-path
  mountPath: /bitnami/minio/data
  accessModes:
  - ReadWriteOnce
  size: 10Gi

resources:
  requests:
    cpu: "250m"
    memory: "512Mi"
  limits:
    cpu: "500m"
    memory: "1Gi"

# MinIO API Service (internal only)
service:
  type: ClusterIP
  ports:
    api: 9000
  annotations: {}

# TLS for MinIO server (optional)
tls:
  enabled: false
  autoGenerated:
    enabled: true
    engine: helm
    certManager:
      keyAlgorithm: RSA
      keySize: 2048
      duration: 2160h
      renewBefore: 360h

# MinIO Console
console:
  enabled: true
  replicaCount: 1
  containerPorts:
    http: 9090
  ingress:
    enabled: true
    ingressClassName: "nginx"
    hostname: minio.explorewithnk.com
    path: /
    pathType: ImplementationSpecific
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    tls:
    - hosts:
      - minio.explorewithnk.com
      secretName: explorewithnk-minio-tls
  networkPolicy:
    enabled: true
    allowExternal: true
    allowExternalEgress: true
    addExternalClientAccess: true
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 5
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 5
    successThreshold: 1
  podSecurityContext:
    enabled: true
    fsGroup: 1001
    fsGroupChangePolicy: Always
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    readOnlyRootFilesystem: true
    privileged: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: [ "ALL" ]
    seccompProfile:
      type: RuntimeDefault

# Extra environment variables
extraEnvVars: []
extraEnvVarsCM: ""
extraEnvVarsSecret: ""
command: []
args: []
