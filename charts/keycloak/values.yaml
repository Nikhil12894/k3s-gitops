# values.yaml

## Global parameters
# global:
#   imageRegistry: ""
#   imagePullSecrets: []

# ## Keycloak configuration
# image:
#   registry: docker.io
#   repository: bitnami/keycloak
#   tag: 26.3.2-debian-12-r0

auth:
  adminUser: admin
  adminPassword: "password" # Change to a secure password
  existingSecret: "" # Optional: Use existing secret for password

## TLS Configuration (using cert-manager)
tls:
  enabled: true
  autoGenerated: false # We're using cert-manager instead
  existingSecret: "explorewithnk-keycloak-tls" # Matches your Certificate's secretName
  usePem: true # Since cert-manager provides PEM format

## Ingress Configuration
ingress:
  enabled: true
  ingressClassName: nginx # or your ingress controller
  hostname: keycloak.explorewithnk.com # Must match Certificate's dnsNames
  path: /
  pathType: ImplementationSpecific
  annotations:
    # For nginx ingress controller
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # Cert-manager annotations
    cert-manager.io/cluster-issuer: "letsencrypt-prod" # Matches your issuerRef
  tls: true
  # No need for secrets here since cert-manager will create it

  #   ## Keycloak settings
  # proxy: "edge" # Required for TLS termination at ingress
  # production: true # Enables production mode (requires TLS)
  # httpRelativePath: "/"

  # # ## Database configuration
  # # postgresql:
  # #   enabled: true
  # #   auth:
  # #     username: bn_keycloak
  # #     password: "your-postgres-password"  # Change to a secure password
  # #     database: bitnami_keycloak

  ## Resource settings
  resources:
    requests:
      cpu: "1000m"
      memory: "1024Mi"
    limits:
      cpu: "2000m"
      memory: "2048Mi"

  ## Replica settings
  replicaCount: 1
